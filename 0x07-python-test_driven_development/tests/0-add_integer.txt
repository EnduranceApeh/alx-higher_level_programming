# run test with python3 -m doctest -v ./tests/0-add_integer.txt

First import method to test
>>> add_integer = __import__('0-add_integer').add_integer

SUCCESS CASE:

Test on signed int, unsigned int and float:
	>>> print(add_integer(2, 1))
	3

	>>> print(add_integer(-1, 3))
	2

	>>> print(add_integer(1.4, 4))
	5

	>>> print(add_integer(30.5, 29.5))
	59

	>>> print(add_integer(-32, -23))
	-55

	>>> print(add_integer(10))
	108

FAIL CASE:

Test on other data type:
	>>> print(add_integer("hello"))
	>>> Traceback (most recent call last))
	...
	TypeError: a must be an integer
	
	>>> print(add_integer(0, [1, 2, 4]))
	Traceback (most recent call last)
	...
	TypeError: b must be an integer
	
	>>> print(add_integer(None))
	Traceback (most recent call last)
	...
	TypeError: a must be an integer
	
	>>> print(add_integer(2, 5, 6))
	Traceback (most recent call last)
	...
	TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
	
	>>> print(add_integer(float("inf")))
	Traceback (most recent call last)
	...
	OverflowError: cannot convert float infinity to integer
	
	>>> print(add_integer(float("-inf")))
	Traceback (most recent call last)
	...
	OverflowError: cannot convert float infinity to integer
